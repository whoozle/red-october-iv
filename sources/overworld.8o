:const player_shift			8
:const neg_player_shift		-8

: overworld_start
	map_render
	va := 24
	vb := 24
	save_player_pos
	player_draw

	loop
		v0 := OCTO_KEY_W
		if v0 key then
			move_up

		v0 := OCTO_KEY_A
		if v0 key then
			move_left

		v0 := OCTO_KEY_S
		if v0 key then
			move_down

		v0 := OCTO_KEY_D
		if v0 key then
			move_right
	again
	return

:const player_dir_front 0
:const player_dir_left 1
:const player_dir_right 2
:const player_dir_back 3

: load_player_pos
	i := player_pos
	load va - vb
	return

: save_player_pos
	i := player_pos
	save va - vb
	return

: player_dir
	:byte player_dir_front

: player_set_dir_v0
	i := player_dir
	save v0 - v0
	return

: player_draw
	load_player_pos
	i := player_dir
	load v0 - v0
	i := long tile_player_front_data
	v1 := 64
: player_draw_next_tile
	if v0 == 0 then
		jump player_draw_sprite
	i += v1
	v0 += -1
	jump player_draw_next_tile
: player_draw_sprite
	sprite va vb 0
	return

: move_sfx
	va := sfx_index_menu
	jump sfx_play_sync

: hit_test
	jump map_is_wall

: check_door
	i := door_pos
	load v1 - v5
	if v1 != 0 then
		if v2 != 0 begin
			i := player_pos
			load vc - vd
			if vc >= v1 begin
				v1 += 4
				if vc <= v1 then
				if vb >= v2 begin
					v2 += 8
					if vb <= v2 begin
						i := player_pos
						va := v4
						vb := v5
						save va - vb
						v0 := v3
						map_scroll_to
						check_objects
						i := player_pos
						load va - vb
					end
				end
			end
		end
	return


: check_objects
	map_get_screen_index
	va := v0
	va >>= va

	i := long map_object_data
	i += va
	i += va
	load v0 - v1
	i := map_current_objects_ptr
	save v0 - v1
	0xf0 0x00
	: map_current_objects_ptr
	0 0

	load v0 - v5
	if v0 == 0x01 begin
		i := long tile_robot_engineer_front_data
		sprite v1 v2 0
		i := battle_pos
		save v1 - v2
	else
		if v0 == 0x00 begin
			v1 := 0
			v2 := 0
			i := battle_pos
			save v1 - v2
			i := door_pos
			save v1 - v2
		else
			i := door_pos
			save v1 - v5
		end
	end
	return


: move_right
	player_draw
	if va >= 112 begin
		i := player_y
		save vb - vb
		map_scroll_right
		check_objects
		i := player_y
		load vb - vb
		va := 0
	else
		va += 8
		vb += 12
		hit_test
		va += -8
		vb += -12
		if v0 == 0 then va += player_shift
		check_door
	end
	save_player_pos
	v0 := player_dir_right
	player_set_dir_v0
	player_draw
	jump move_sfx


: move_left
	player_draw
	if va <= 0 begin
		i := player_y
		save vb - vb
		map_scroll_left
		check_objects
		i := player_y
		load vb - vb
		va := 112
	else
		vb += 12
		hit_test
		vb += -12
		if v0 == 0 then va += neg_player_shift
		check_door
	end
	save_player_pos
	v0 := player_dir_left
	player_set_dir_v0
	player_draw
	jump move_sfx


: move_down
	player_draw
	if vb >= 44 begin
		i := player_x
		save va - va
		map_scroll_down
		check_objects
		i := player_x
		load va - va
		vb := 0
	else
		vb += 16
		hit_test
		vb += -16
		if v0 == 0 then vb += player_shift
	end
	save_player_pos
	v0 := player_dir_front
	player_set_dir_v0
	player_draw
	jump move_sfx


: move_up
	player_draw
	if vb <= 0 begin
		i := player_x
		save va - va
		map_scroll_up
		check_objects
		i := player_x
		load va - va
		vb := 48
	else
		vb += 10
		hit_test
		vb += -10
		if v0 == 0 then vb += neg_player_shift
	end
	save_player_pos
	v0 := player_dir_back
	player_set_dir_v0
	player_draw
	jump move_sfx


: battle_pos 0x00 0x00
: door_pos 0x00 0x00 0x00 0x00 0x00

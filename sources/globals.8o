:macro offset ADDR {
	:calc a1 { 0xFF & ( ADDR >> 8 ) }
	:calc a2 { 0xFF & ADDR      }
	:byte a1
	:byte a2
}

:macro offsethi ADDR {
	:calc a1 { 0xFF & ( ADDR >> 8 ) }
	:byte a1
}

:macro offsetlo ADDR {
	:calc a1 { 0xFF & ADDR }
	:byte a1
}

:macro dump X Y {
	:calc a1 { 0x50 | X }
	:calc a2 { 0x0f | ( Y << 4 ) }
	:byte a1
	:byte a2
}

:const move_speed_left -2
:const move_speed_right 2
:const move_speed_up 2
:const move_speed_down 2

:const sfx_index_menu 0
:const sfx_index_hit 1
:const sfx_index_explosion 2
:const sfx_index_shot 3
:const sfx_index_powerup 4
:const sfx_index_move 5

:const overlay_overworld 0
:const overlay_battle 1
:const overlay_comix 2

: current_overlay
	2

: screen_pos
: screen_y 0
: screen_x 0

: player_pos
: player_x 40
: player_y 40

: player_hp
	255

: current_battle
	0

: intro_shown
	0

: game_finished
	0

: first_run
	1

: battle_skill_level
: battle_attack_level
	1
: battle_engi_level
	1
: battle_repair_level
	1
: battle_hack_level
	1

: encounters
	1 1 1 1
	1 1 1 1
	1 1 1 1
	1 1 1 1

: skills
	0 0 0
	0 0 0
	0 0 0
	0 0 0

	0 0 0 0 #unused bits

: set_current_overlay
	i := current_overlay
	save va - va
	return

: map_get_screen_index
	i := screen_pos
	load v0 - v1
	v0 <<= v0
	v0 <<= v0
	v0 <<= v0
	v0 |= v1
	v0 <<= v0
	return

: map_set_screen_pos_by_id
	va >>= va
	v1 := 7
	v1 &= va
	v0 := va
	v0 >>= v0
	v0 >>= v0
	v0 >>= v0
	i := screen_pos
	save v0 - v1
	return

: add_skillpoint
	i := skills
	i += va
	v0 := 1
	save v0 - v0

	if va <= 2 begin
		i := battle_attack_level
	else if va <= 5 begin
		i := battle_engi_level
	else if va <= 8 begin
		i := battle_repair_level
	else
		i := battle_hack_level
	end
	end
	end

	load v0 - v0
	v0 += 1
	if v0 > 4 then
		v0 := 4
	save v0 - v0
	return

: map_disable_object
	v0 := 0
	loop
		i := long map_object_data
		i += v0
		i += v0
		load v1 - v2

		i := map_object_data_ptr
		save v1 - v2

		0xf0 0x00
		: map_object_data_ptr
		0 0

: map_disable_object_loop
		load v1 - v6
		if v1 == 0 then
			jump map_disable_object_next

		if v1 == 3 begin #door
			v7 := 6
			jump map_disable_object_skip
		end
		v7 := 4
		if va != v1 then # wrong type
			jump map_disable_object_skip

		if vb == v4 begin
			v1 := 0xff
			save v1 - v1
		end

: map_disable_object_skip
		i += v7
		jump map_disable_object_loop

: map_disable_object_next
		v0 += 1
		if v0 != 16 then
	again
	return

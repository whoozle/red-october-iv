# v0 			v1			v2			v3 - v4			v5 - v6 			v7
# [screen id]	[player x]	[player y]	[encounters]	[skills 0-12 bits]	[control sum]

: game_save_screen_id
	0

: game_save
	map_get_screen_index
	i := game_save_screen_id
	save v0 - v0

	i := encounters
	game_save_pack_byte
	v3 := v0

	game_save_pack_byte
	v4 := v0

	i := skills
	game_save_pack_byte
	v5 := v0

	game_save_pack_byte
	v6 := v0

	i := game_save_screen_id
	load v0 - v0
	i := player_pos
	load v1 - v2

	v7 := 0xab
	v7 += v0
	v7 += v1
	v7 += v2
	v7 += v3
	v7 += v4
	v7 += v5
	v7 += v6

	saveflags v7
	return

: game_load
	loadflags v7
	v7 -= v0
	v7 -= v1
	v7 -= v2
	v7 -= v3
	v7 -= v4
	v7 -= v5
	v7 -= v6

	if v7 != 0xab begin
		v0 := 0
		return
	end

	i := game_save_screen_id
	save v0 - v0
	i := player_pos
	save v1 - v2

	i := encounters
	va := v3
	game_load_unpack_byte
	va := v4
	game_load_unpack_byte

	i := skills
	va := v5
	game_load_unpack_byte
	va := v6
	game_load_unpack_byte

	i := game_save_screen_id
	load va - va
	map_set_screen_pos_by_id

	game_load_update_battles
	game_load_update_skills

	v0 := 1
	return

: game_load_unpack_byte
	v7 := 0
	v8 := 1
	loop
		v9 := 0x80
		v9 &= va
		if v9 != 0 then
			v9 := 1
		save v9 - v9

		i += v8
		va <<= va

		v7 += 1
		if v7 != 8 then
	again
	return

: game_save_pack_byte
	v0 := 0
	v7 := 0
	v8 := 1
	loop
		v0 <<= v0

		load v9 - v9
		i += v8
		v0 |= v9 #or lsb bit of encounter

		v7 += 1
		if v7 != 8 then
	again
	return

: game_load_update_battles
	vb := 0
	loop
		i := encounters
		i += vb
		load v0 - v0
		if v0 == 0 begin
			va := 1 #battle
			game_load_disable_object
		end

		vb += 1
		if vb != 16 then
	again
	return

: game_load_update_skills
	vb := 0
	loop
		i := skills
		i += vb
		load v0 - v0
		if v0 == 1 begin
			va := vb
			add_skillpoint
			va := 2 #skill
			game_load_disable_object
		end

		vb += 1
		if vb != 16 then
	again
	return

: game_load_disable_object
	v0 := 0
	loop
		i := long map_object_data
		i += v0
		i += v0
		load v1 - v2
		i := map_object_data_ptr
		save v1 - v2

		0xf0 0x00
		: map_object_data_ptr
		0 0

: game_load_disable_object_loop
		load v1 - v6
		if v1 == 0 then
			jump game_load_disable_object_next

		if v1 == 3 begin #door
			v7 := 6
			jump game_load_disable_object_skip
		end
		v7 := 4
		if va != v1 then # wrong type
			jump game_load_disable_object_skip

		if vb == v4 begin
			v1 := 0xff
			save v1 - v1
		end

: game_load_disable_object_skip
		i += v7
		jump game_load_disable_object_loop

: game_load_disable_object_next
		v0 += 1
		if v0 != 16 then
	again
	return
